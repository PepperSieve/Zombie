
const u32 STR_LENGTH = 2048
const u32 PROXY_DIST = 300

def isZero(field x) -> field:
	field y = if x == 0 then 1 else 0 fi
	return y

def isNotZero(field x) -> field:
	field y = if x != 0 then 1 else 0 fi
	return y

def inRange(u8 x, u8 l, u8 h) -> field:
	field y = if l <= x && x <= h then 1 else 0 fi
	return y

def spread(field[STR_LENGTH] x) -> field[STR_LENGTH]:
	field[STR_LENGTH] y = [0;STR_LENGTH]
	for u32 i in PROXY_DIST..(STR_LENGTH-PROXY_DIST) do
		field sum = 0
		for u32 j in (i-PROXY_DIST)..(i+PROXY_DIST) do
			sum = sum + x[j]
		endfor
		y[i] = sum
	endfor
	return y

def procCheck(field[STR_LENGTH] l, field[STR_LENGTH] r) -> bool:
	field[STR_LENGTH] ls = spread(l)
	for u32 i in 0..STR_LENGTH do
		assert(ls[i] * r[i] == 0)
	endfor
	return true

def parseExtract(field[STR_LENGTH] s) -> field[STR_LENGTH]:
	field[STR_LENGTH] ls = [0; STR_LENGTH]
	for u32 i in 4..STR_LENGTH do
		ls[i] = ls[i - 1] + isZero((s[i - 4] - 13) + 256 * (s[i - 3] - 10) + 65536 * (s[i - 2] - 13) + 16777216 * (s[i - 1] - 10))
	endfor
	return ls

def main(field[STR_LENGTH] t, u8[STR_LENGTH] tu) -> bool:
	field[STR_LENGTH] start = [1; STR_LENGTH]
	field accum = 0
	field[STR_LENGTH] t_0 = [0; STR_LENGTH]
	for u32 i in 0..STR_LENGTH do
		t_0[i] = isZero((t[i] - 48) * (t[i] - 49) * (t[i] - 50) * (t[i] - 51) * (t[i] - 52) * (t[i] - 53) * (t[i] - 54) * (t[i] - 55) * (t[i] - 56) * (t[i] - 57))
	endfor
	field[STR_LENGTH] p_1 = [0; STR_LENGTH]
	for u32 i in 1..STR_LENGTH do
		p_1[i] = isZero((t[i - 1] - 47) + (1 - t_0[i - 0]) * 256)
	endfor
	field[STR_LENGTH] p_2 = [0; STR_LENGTH]
	for u32 i in 2..STR_LENGTH do
		p_2[i] = isZero((t[i - 2] - 47) + (1 - t_0[i - 1]) * 256 + (1 - t_0[i - 0]) * 512)
	endfor
	field[STR_LENGTH] p_0 = [0; STR_LENGTH]
	for u32 i in 0..STR_LENGTH do
		p_0[i] = 1 - t_0[i]
	endfor
	field[STR_LENGTH] p_3 = [0; STR_LENGTH]
	for u32 i in 1..STR_LENGTH do
		p_3[i] = isZero((1 - t_0[i - 1]) + (1 - t_0[i - 0]) * 2)
	endfor
	field[STR_LENGTH] s_0 = [0; STR_LENGTH]
	for u32 i in 1..STR_LENGTH do
		s_0[i] = p_0[i] * start[i - 1]
	endfor
	field[STR_LENGTH] s_1 = [0; STR_LENGTH]
	for u32 i in 1..STR_LENGTH do
		s_1[i] = p_0[i] * (s_0[i - 1])
	endfor
	field[STR_LENGTH] s_3 = [0; STR_LENGTH]
	for u32 i in 2..STR_LENGTH do
		s_3[i] = p_1[i] * (s_0[i - 2] + s_1[i - 2])
	endfor
	field[STR_LENGTH] s_4 = [0; STR_LENGTH]
	for u32 i in 1..STR_LENGTH do
		s_4[i] = p_0[i] * (s_3[i - 1])
	endfor
	field[STR_LENGTH] s_6 = [0; STR_LENGTH]
	for u32 i in 3..STR_LENGTH do
		s_6[i] = p_2[i] * (s_3[i - 3] + s_4[i - 3])
	endfor
	field[STR_LENGTH] s_7 = [0; STR_LENGTH]
	for u32 i in 2..STR_LENGTH do
		s_7[i] = p_3[i] * (s_6[i - 2])
	endfor
	field[STR_LENGTH] f_8 = [0; STR_LENGTH]
	for u32 i in 0..STR_LENGTH do
		f_8[i] = (s_6[i] + s_7[i])
		accum = accum + f_8[i]
	endfor
	assert(accum == 0)
	return false